/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Controller.ClientesController;
import Controller.ParcelasController;
import Model.Clientes;
import Model.Parcelas;
import java.text.NumberFormat;
import java.text.ParseException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author Ariel
 */
public class TelaGerenciaParcelas extends javax.swing.JFrame {

    ClientesController clientesController = new ClientesController();
    ParcelasController parcelasController = new ParcelasController();

    /**
     * Creates new form TelaGerenciaParcelas
     */
    public TelaGerenciaParcelas(int idCliente) {
        initComponents();
        setupCustomFields();
        tfIdCliente.setText(String.valueOf(idCliente));
        carregarParcelas(idCliente);

    }

    private void setupCustomFields() {
        try {
            MaskFormatter dateFormatter = new MaskFormatter("##/##/##");
            dateFormatter.setPlaceholderCharacter('_');
            tfDataParcela.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(dateFormatter));

            NumberFormat currencyFormat = NumberFormat.getNumberInstance();
            currencyFormat.setMaximumFractionDigits(2);
            tfValorParcela.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(
                    new javax.swing.text.NumberFormatter(currencyFormat)));

            NumberFormat integerFormat = NumberFormat.getIntegerInstance();
            tfQuantidadeParcela.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(
                    new javax.swing.text.NumberFormatter(integerFormat)));

        } catch (ParseException e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfIdCliente = new javax.swing.JTextField();
        tfValorParcela = new javax.swing.JFormattedTextField();
        tfQuantidadeParcela = new javax.swing.JFormattedTextField();
        tfDataParcela = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btAddParcela = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableParcelasAtivas = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);

        tfIdCliente.setEditable(false);
        jLabel1.setText("Código Cliente:");

        jLabel2.setText("Dados da Parcela:");

        NumberFormat currencyFormat = NumberFormat.getNumberInstance();
        currencyFormat.setMaximumFractionDigits(2);
        tfValorParcela.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(
                new javax.swing.text.NumberFormatter(currencyFormat)));
        tfValorParcela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfValorParcelaActionPerformed(evt);
            }
        });

        jLabel4.setText("Valor");
        jLabel3.setText("Qtd. Parcelas");

        jLabel5.setText("Data");

        btAddParcela.setText("Adicionar");
        btAddParcela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddParcelaActionPerformed(evt);
            }
        });

        jLabel6.setText("Parcelas Ativas");

        tableParcelasAtivas.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                    {null, null, null
                    }},
                new String[]{
                    "Valor", "Qtd. Parcelas", "Data"
                }
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        });
        jScrollPane1.setViewportView(tableParcelasAtivas);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);

        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addGap(18, 18, 18)
                                                .addComponent(tfIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel4)
                                                        .addComponent(tfValorParcela, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel3)
                                                        .addComponent(tfQuantidadeParcela, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel5)
                                                        .addComponent(tfDataParcela, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btAddParcela)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1)
                                .addContainerGap())
        );

        layout.setVerticalGroup(
                layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(tfIdCliente))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(jLabel3)
                                .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(tfValorParcela)
                                .addComponent(tfQuantidadeParcela)
                                .addComponent(tfDataParcela)
                                .addComponent(btAddParcela))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }

    private void btPesquisaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisaClienteActionPerformed

    }//GEN-LAST:event_btPesquisaClienteActionPerformed

    private void btAddParcelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddParcelaActionPerformed
        try {
            if (tfIdCliente.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Por favor, informe o ID do cliente.", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }

            int idCliente = Integer.parseInt(tfIdCliente.getText());

            Clientes cliente = clientesController.buscarClientePorId(idCliente);
            if (cliente == null) {
                JOptionPane.showMessageDialog(this, "Cliente não encontrado! Verifique o ID.", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }

            double valorTotal = ((Number) tfValorParcela.getValue()).doubleValue();
            int quantidadeParcelas = ((Number) tfQuantidadeParcela.getValue()).intValue();
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yy");
            LocalDate dataEmissao = LocalDate.parse(tfDataParcela.getText(), formatter);

            Parcelas parcela = new Parcelas(idCliente, quantidadeParcelas, valorTotal, dataEmissao);
            parcelasController.salvarParcela(parcela);

            atualizarTabelaParcelas(idCliente);
            limparCamposParcela();

            JOptionPane.showMessageDialog(this, "Parcela adicionada com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Verifique os valores inseridos! Campos numéricos precisam ser preenchidos corretamente.", "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro ao adicionar parcela!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btAddParcelaActionPerformed

    private void tfValorParcelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfValorParcelaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfValorParcelaActionPerformed

    /**
     * @param args the command line arguments
     */
    private void atualizarTabelaParcelas(int idCliente) {
        List<Parcelas> parcelas = parcelasController.buscarParcelasPorClienteId(idCliente);
        DefaultTableModel model = (DefaultTableModel) tableParcelasAtivas.getModel();
        model.setRowCount(0);

        for (Parcelas parcela : parcelas) {
            model.addRow(new Object[]{
                parcela.getValorTotal(),
                parcela.getQuantidadeParcelas(),
                parcela.getDataEmissao()
            });
        }
    }

    private void limparCamposParcela() {
        tfValorParcela.setText("");
        tfQuantidadeParcela.setText("");
        tfDataParcela.setText("");
    }

    private void carregarParcelas(int idCliente) {
        try {
            List<Parcelas> parcelas = parcelasController.buscarParcelasPorClienteId(idCliente);

            DefaultTableModel model = (DefaultTableModel) tableParcelasAtivas.getModel();
            model.setRowCount(0);

            for (Parcelas parcela : parcelas) {
                model.addRow(new Object[]{
                    parcela.getValorTotal(),
                    parcela.getQuantidadeParcelas(),
                    parcela.getDataEmissao()
                });
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro ao carregar parcelas!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private javax.swing.JButton btAddParcela;
    private javax.swing.JButton btPesquisaCliente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableParcelasAtivas;
    private javax.swing.JFormattedTextField tfDataParcela;
    private javax.swing.JTextField tfIdCliente;
    private javax.swing.JFormattedTextField tfQuantidadeParcela;
    private javax.swing.JFormattedTextField tfValorParcela;

}
